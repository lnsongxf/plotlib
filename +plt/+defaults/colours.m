function varargout = colours(colourID)
%% Description
%   Get the colours defined by the colourIDs from the default set of
%   colours used in the plotting library
% Input
%   colourID:      a cell string of colourIDs can be chosen:
%                       - list          does not return colours, but lists
%                                       the total default colours available
%                       - black         RGB: 0, 0, 0
%                       - blue          RGB: 0, 0, 1
%                       - green         RGB: 0, 1, 0
%                       - red           RGB: 1, 0, 0
%                       - lightgray     RGB: 0.35, 0.35, 0.35
%                       - darkgray      RGB: 0.6, 0.6, 0.6
%                       - lightblue     RGB: 0.6, 0.6, 1
%                       - lightgreen    RGB: 0.6, 1, 0.6
%                       - lightred      RGB: 1, 0.6, 0.6
%                       - aqua          RGB: 0, 1, 1
%                       - yellow        RGB: 1, 1, 0
%                       - orange        RGB: 1, 0.6, 0
%                       - white         RGB: 1, 1, 1
% Output
%   C:      cell string of RGB required colours 
% Example: 
%   (1) List all available colours in the default list 
%       plt.defaults.colours('list');
%   (2) Get cell array of rgb values for green and light green
%       c = plt.defaults.colours({'green','lightgreen'});

% Author
%   Naveed Ejaz (ejaz.naveed@gmail.com)

%% 1. Define a list of colours
colour_names    = {'black',...
                   'blue',...
                   'green',...
                   'red',...
                   'lightgray',...
                   'darkgray',...
                   'lightblue',...
                   'lightgreen',...
                   'lightred',...
                   'aqua',...
                   'yellow',...
                   'orange',...
                   'white'};
rgb_values      = {[0, 0, 0],...
                   [0, 0, 1],...
                   [0, 1, 0],...
                   [1, 0, 0],...
                   [0.3, 0.3, 0.3],...
                   [0.7, 0.7, 0.7],...
                   [0.6, 0.6, 1],...
                   [0.6, 1, 0.6],...
                   [1, 0.6, 0.6],...
                   [0, 1, 1],...
                   [1, 1, 0],...
                   [1, 0.6, 0],...
                   [1, 1, 1]};


%% 2. Display or return the RGB values of the list of colours
if strcmp(colourID,'list')==1
    pivottablerow(colour_names',cat(1,[],rgb_values{:}),'nanmean(x,1)');
    C   = [];
else
    [x,y]   = ismember(colourID,colour_names);
	C       = rgb_values(y(x));
end;

varargout = {C};
